
##### nvm (node version manager) #####
# placeholder nvm shell function
# On first use, it will set nvm up properly which will replace the `nvm`
# shell function with the real one
# [ -n $NVM_DIR ] || source "$(dirname ${0})/nvm.env"

NVM_DIR="$HOME/.nvm"
export NVM_DIR

# Get path to bin directory for default node version
local alias_name='default'
local alias_root="${NVM_DIR}/alias"
local version_root="${NVM_DIR}/versions/node"
local alias_file="$alias_root/$alias_name"
local version_bin_dir=""

# Allow for multiple alias pointers (e.g. default -> latest -> v11.6.0)
while ! [[ -d $version_bin_dir ]] && [[ -f $alias_file ]]
do
  alias_value=`cat $alias_file`
  alias_file="$alias_root/$alias_value"
  version_bin_dir="$version_root/$alias_value/bin"
done

# Set PATH to default node-version/bin
# PATH="${version_bin_dir}:${PATH}"
prepend-path "${version_bin_dir}"


nvm() {
  if [[ -d "${NVM_DIR}" ]]; then
    
    # Source original file
   if [[ -f "$NVM_DIR/nvm.sh" ]]
   then
     . "${NVM_DIR}/nvm.sh"
    fi
        
    # invoke the real nvm function now
    nvm "$@"
  else
    echo "nvm is not installed" >&2
    return 1
  fi
}
